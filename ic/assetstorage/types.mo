// Do NOT edit this file. It was automatically generated by https://github.com/aviate-labs/agent-go.
module T {
    public type BatchId = Nat;
    public type ChunkId = Nat;
    public type Key = Text;
    public type Time = Int;
    public type CreateAssetArguments = { key : T.Key; content_type : Text; max_age : ?Nat64; headers : ?[T.HeaderField]; enable_aliasing : ?Bool; allow_raw_access : ?Bool };
    public type SetAssetContentArguments = { key : T.Key; content_encoding : Text; chunk_ids : [T.ChunkId]; sha256 : ?Blob };
    public type UnsetAssetContentArguments = { key : T.Key; content_encoding : Text };
    public type DeleteAssetArguments = { key : T.Key };
    public type ClearArguments = {  };
    public type BatchOperationKind = { #CreateAsset : T.CreateAssetArguments; #SetAssetContent : T.SetAssetContentArguments; #SetAssetProperties : T.SetAssetPropertiesArguments; #UnsetAssetContent : T.UnsetAssetContentArguments; #DeleteAsset : T.DeleteAssetArguments; #Clear : T.ClearArguments };
    public type CommitBatchArguments = { batch_id : T.BatchId; operations : [T.BatchOperationKind] };
    public type CommitProposedBatchArguments = { batch_id : T.BatchId; evidence : Blob };
    public type ComputeEvidenceArguments = { batch_id : T.BatchId; max_iterations : ?Nat16 };
    public type DeleteBatchArguments = { batch_id : T.BatchId };
    public type HeaderField = (Text, Text);
    public type HttpRequest = { method : Text; url : Text; headers : [T.HeaderField]; body : Blob; certificate_version : ?Nat16 };
    public type HttpResponse = { status_code : Nat16; headers : [T.HeaderField]; body : Blob; streaming_strategy : ?T.StreamingStrategy };
    public type StreamingCallbackHttpResponse = { body : Blob; token : ?T.StreamingCallbackToken };
    public type StreamingCallbackToken = { key : T.Key; content_encoding : Text; index : Nat; sha256 : ?Blob };
    public type StreamingStrategy = { #Callback : { callback : { /* func */ }; token : T.StreamingCallbackToken } };
    public type SetAssetPropertiesArguments = { key : T.Key; max_age : ??Nat64; headers : ??[T.HeaderField]; allow_raw_access : ??Bool; is_aliased : ??Bool };
    public type ConfigurationResponse = { max_batches : ?Nat64; max_chunks : ?Nat64; max_bytes : ?Nat64 };
    public type ConfigureArguments = { max_batches : ??Nat64; max_chunks : ??Nat64; max_bytes : ??Nat64 };
    public type Permission = { #Commit; #ManagePermissions; #Prepare };
    public type GrantPermission = { to_principal : Principal; permission : T.Permission };
    public type RevokePermission = { of_principal : Principal; permission : T.Permission };
    public type ListPermitted = { permission : T.Permission };
    public type ValidationResult = { #Ok : Text; #Err : Text };
    public type AssetCanisterArgs = { #Init : T.InitArgs; #Upgrade : T.UpgradeArgs };
    public type InitArgs = {  };
    public type UpgradeArgs = { set_permissions : ?T.SetPermissions };
    public type SetPermissions = { prepare : [Principal]; commit : [Principal]; manage_permissions : [Principal] };
};
