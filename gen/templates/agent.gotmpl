// Package {{ .PackageName }} provides a client for the "{{ .CanisterName }}" canister.
// Do NOT edit this file. It was automatically generated by https://github.com/aviate-labs/agent-go.
package {{ .PackageName }}

import (
    "github.com/aviate-labs/agent-go"
    {{ if .UsedIDL }}"github.com/aviate-labs/agent-go/candid/idl"{{ end }}
    "github.com/aviate-labs/agent-go/principal"
)

{{- range .Definitions }}

type {{ .Name }} = {{ .Type }}
{{- end }}

// Agent is a client for the "{{ .CanisterName }}" canister.
type Agent struct {
    a          *agent.Agent
    canisterId principal.Principal
}

// NewAgent creates a new agent for the "{{ .CanisterName }}" canister.
func NewAgent(canisterId principal.Principal, config agent.Config) (*Agent, error) {
    a, err := agent.New(config)
    if err != nil {
        return nil, err
    }
    return &Agent{
        a:          a,
        canisterId: canisterId,
    }, nil
}
{{- range .Methods }}

// {{ .Name }} calls the "{{ .RawName }}" method on the "{{ $.CanisterName }}" canister.
func (a Agent) {{ .Name }}({{ range $i, $e := .ArgumentTypes }}{{ if $i }}, {{ end }}{{ $e.Name }} {{ $e.Type }}{{ end }}) {{ if .ReturnTypes }}({{ range .ReturnTypes }}*{{ . }}, {{ end }}error){{ else }}error{{ end }} {
    args, err := idl.Marshal([]any{{ "{" }}{{ range $i, $e := .ArgumentTypes }}{{ if $i }}, {{ end }}{{ $e.Name }}{{ end }}{{ "}" }})
    if err != nil {
        return {{ range .ReturnTypes }}nil, {{ end }}err
    }
    {{ range $i, $e := .ReturnTypes -}}
        var r{{ $i }} {{ $e }}
    {{ end -}}
    if err := a.a.{{ .Type }}(
        a.canisterId,
        "{{ .RawName }}",
        args,
        []any{{ "{" }}{{ range $i, $e := .ReturnTypes }}{{ if $i }}, {{ end }}&r{{ $i }}{{ end }}{{ "}"}},
    ); err != nil {
        return {{ range .ReturnTypes }}nil, {{ end }}err
    }
    return {{ range $i, $_ := .ReturnTypes }}&r{{ $i }}, {{ end }}nil
}
{{- end }}
